---
swagger: '2.0'

info:
  title: WiserLP API Docs
  version: v1

tags:
- name: Client Endpoints

paths:
  "/register-client":
    post:
      tags:
      - Client Endpoints
      operationId: register-client
      summary: Register a new client, you can do so using both username/password or
        appkey/secret/accessToken/accessTokenSecret, consult the models below
      parameters:
      - name: User
        in: body
        required: true
        schema:
          "$ref": "#/definitions/User - Authentication with Password"
      responses:
        '200':
          description: Register success
        '400':
          description: Bad request
  "/register-client-form":
    post:
      tags:
      - Client Endpoints
      summary: Register a new client, you can do so using both username/password or
        appkey/secret/accessToken/accessTokenSecret, consult the models below - using form-data type of request
      description: ""
      operationId: register-client-form
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: username
        in: "form-data"
        description: "liveperson account username"
        required: true
        type: "string"
      - name: liveperson_accountid
        in: "form-data"
        description: "liveperson accountId"
        required: true
        type: "string"
      - name: liveperson_password
        in: "form-data"
        description: "liveperson account password"
        type: "string"
      - name: liveperson_appkey
        in: "form-data"
        description: "liveperson account app key"
        type: "string"
      - name: liveperson_accesstoken
        in: "form-data"
        description: "liveperson account access token"
        type: "string"
      - name: liveperson_acesstokensecret
        in: "form-data"
        description: "liveperson account access token secret"
        type: "string"
      - name: new_conversation_webhook
        in: "form-data"
        description: "new conversation webhook url"
        type: "string"
      - name: new_file_in_conversation_webhook
        in: "form-data"
        description: "new file in conversation webhook url"
        type: "string"
      - name: new_message_arrived_webhook
        in: "form-data"
        description: "new message arrived webhook url"
        type: "string"
      - name: coordinates_webhook
        in: "form-data"
        description: "shared coordinates webhook url"
        type: "string"
      responses:
        '200':
          description: Register success
        '400':
          description: Bad request

  "/unregister-client":
    delete:
      tags:
      - Client Endpoints
      operationId: unregister-client
      summary: Remove entirely from the system a given user
      parameters:
      - name: accountId
        in: body
        example: |-
          {
            "accountId": "ABCDE-12345-MNBVC-98765"
          }
        required: true
  "/unregister-client-form":
    delete:
      tags:
      - Client Endpoints
      summary: Remove entirely from the system a given user - using form-data type of request
      description: ""
      operationId: unregister-client-form
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: accountId
        in: "form-data"
        description: "liveperson accountId"
        required: true
        type: "string"

  "/update-metadata":
    put:
      tags:
      - Client Endpoints
      operationId: update-metadata
      summary: Update all of the account-related parameters, except for: username, accountId and password
      parameters:
      - name: User
        in: body
        example: |-
          {
            "accountId": "ABCDE-12345-MNBVC-98765",
            "webhooks": {
              "new_conversation_webhook": "https://hooks.zapier.com/hooks/catch/1646904/73834/",
              "new_file_in_conversation_webhook": "https://hooks.zapier.com/hooks/catch/1234443/234234/",
              "new_message_arrived_webhook": "https://hooks.zapier.com/hooks/catch/1234443/293734/",
              "coordinates_webhook": "https://hooks.zapier.com/hooks/catch/123123443/293734/"
            }
          }
        required: true
      responses:
        '200':
          description: Account updated
        '400':
          description: Bad request
  "/update-metadata-form":
    put:
      tags:
      - Client Endpoints
      summary: Update all of the account-related parameters, except for: username, accountId and password - using form-data type of request
      description: ""
      operationId: update-metadata-form
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: accountId
        in: "form-data"
        description: "liveperson accountId"
        required: true
        type: "string"
      - name: new_conversation_webhook
        in: "form-data"
        description: "new conversation webhook url"
        type: "string"
      - name: new_file_in_conversation_webhook
        in: "form-data"
        description: "new file in conversation webhook url"
        type: "string"
      - name: new_message_arrived_webhook
        in: "form-data"
        description: "new message arrived webhook url"
        type: "string"
      - name: coordinates_webhook
        in: "form-data"
        description: "shared coordinates webhook url"
        type: "string"
      responses:
        '200':
          description: Account updated
        '400':
          description: Bad request

  "/send-message":
    post:
      tags:
      - Actions
      operationId: send-message
      summary: Send a message to any open conversation
      parameters:
      - name: Message
        in: body
        required: true
        schema:
          "$ref": "#/definitions/Message"
      responses:
        '200':
          description: Message sent
        '400':
          description: Bad request
  "/send-message-form":
    post:
      tags:
      - Actions
      summary: Send a message to any open conversation - using form-data type of request
      description: ""
      operationId: send-message -form
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: username
        in: "form-data"
        description: "liveperson account username"
        required: true
        type: "string"
      - name: liveperson_accountid
        in: "form-data"
        description: "liveperson account id"
        required: true
        type: "string"
      - name: liveperson_password
        in: "form-data"
        description: "liveperson account password"
        required: true
        type: "string"
      - name: dialogId
        in: "form-data"
        description: "liveperson dialog id"
        required: true
        type: "string"
      - name: contentType
        in: "form-data"
        description: "message content type."
        required: true
        type: "string"
      - name: message
        in: "form-data"
        description: "text message"
        example: "hola"
        type: "string"

  "/conversation-details":
    get:
      tags:
      - Client Endpoints
      operationId: conversation-details
      summary: Retrieve conversation details, passing a specific agentId and conversationId
      parameters:
      - name: accountId
        in: body
        example: |-
          {
            "accountId": "ABCDE-12345-MNBVC-98765"
          }
        required: true
      - name: convId
        in: body
        example: |-
          {
            "convId": "123456789"
          }
        required: true
  "/conversation-details-form":
    get:
      tags:
      - Client Endpoints
      summary: Retrieve conversation details, passing a specific agentId and conversationId - using form-data type of request
      description: ""
      operationId: conversation-details-form
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: accountId
        in: "form-data"
        description: "liveperson account id"
        required: true
        type: "integer"
      - name: convId
        in: "form-data"
        description: "liveperson conversation id"
        required: true
        type: "string"

  "/domains":
    get:
      tags:
      - Client Endpoints
      operationId: domains
      summary: Retrieve account domains based on accountId
      parameters:
      - name: accountId
        in: body
        example: |-
          {
            "accountId": "ABCDE-12345-MNBVC-98765"
          }
        required: true
  "/domains-form":
    get:
      tags:
      - Client Endpoints
      summary: Retrieve account domains based on accountId - using form-data type of request
      description: ""
      operationId: domains-form
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: accountId
        in: "form-data"
        description: "liveperson account"
        required: true
        type: "integer"

definitions:
  User - Authentication with Secret:
    required:
    - username
    - liveperson_accountid
    - liveperson_appkey
    - liveperson_secret
    - liveperson_accesstoken
    - liveperson_accesstokensecret
    properties:
      username:
        type: string
      liveperson_password:
        type: string
      liveperson_accountid:
        type: string
      liveperson_appkey:
        type: string
      liveperson_secret:
        type: string
      liveperson_accesstoken:
        type: string
      liveperson_accesstokensecret:
        type: string
      webhooks:
        "$ref": "#/definitions/Webhooks"
    example:
      username: John Doe
      liveperson_accountid: '1234567890'
      liveperson_appkey: '1234567890'
      liveperson_secret: '1234567890'
      liveperson_accesstoken: '1234567890'
      liveperson_accesstokensecret: '1234567890'
      webhooks:
        new_conversation_webhook: https://hooks.zapier.com/hooks/catch/1646904/73834/
        new_file_in_conversation_webhook: https://hooks.zapier.com/hooks/catch/1234443/234234/
        new_message_arrived_webhook: https://hooks.zapier.com/hooks/catch/1234443/293734/
        coordinates_webhook: https://hooks.zapier.com/hooks/catch/1234443/210944/
  User - Authentication with Password:
    required:
    - username
    - liveperson_accountid
    - liveperson_password
    properties:
      username:
        type: string
      liveperson_password:
        type: string
      liveperson_accountid:
        type: string
      webhooks:
        "$ref": "#/definitions/Webhooks"
    example:
      username: John Doe
      liveperson_accountid: '1234567890'
      liveperson_password: '1234567890'
      webhooks:
        new_conversation_webhook: https://hooks.zapier.com/hooks/catch/1646904/73834/
        new_file_in_conversation_webhook: https://hooks.zapier.com/hooks/catch/1234443/234234/
        new_message_arrived_webhook: https://hooks.zapier.com/hooks/catch/1234443/293734/
        coordinates_webhook: https://hooks.zapier.com/hooks/catch/1234443/210944/
  Message:
    type: object
    required:
    - credentials
    - message
    properties:
      credentials:
        "$ref": "#/definitions/User - Authentication with Password"
      message:
        type: object
        required:
        - dialogId
        - contentType
        - message
        properties:
          dialogId:
            type: string
          contentType:
            type: string
          message:
            type: string
    example:
      credentials:
        username: john@doe.com
        liveperson_accountid: '978654321'
        liveperson_password: MySafePasswowrd1234
      message:
        dialogId: ABCDE-12345-MNBVC-98765
        contentType: text/plain
        message: Hello!
  Webhooks:
    type: object
    properties:
      new_conversation_webhook:
        type: string
      new_file_in_conversation_webhook:
        type: string
      new_message_arrived_webhook:
        type: string
      coordinates_webhook:
        type: string
